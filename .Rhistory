legend.text = element_text(size = 10),axis.title.y = element_text(size = 11))
lentil_1 %>% filter (component != "Total") %>% ggbarplot(x = "component", y = "folate",fill = "sample", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_sd", title = "Lentil",
position = position_dodge(0.8), xlab = "", ylab = "Folate (µg/100g DM)", x.text.angle = 30) + theme(plot.title = element_text(hjust = 0.5)
, axis.text = element_text(size = 10), legend.position = c(0.05, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11)) + annotate("text",
x = c('PGA', '10-HCO-H2', '10-HCO-PGA', 'H4', '5-CH3-H4', '5-HCO-H4', '5,10-CH+-H4'), y = c(2, 14 , 18, 13, 32, 14, 12),
label = c("**", "", "**", "**", "*", "**", "**"))
lentil_bar_1 <- lentil_1 %>% filter (component != "Total") %>% ggbarplot(x = "component", y = "folate",fill = "sample", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_sd", title = "Lentil",
position = position_dodge(0.8), xlab = "", ylab = "Folate (µg/100g DM)", x.text.angle = 30) + theme(plot.title = element_text(hjust = 0.5)
, axis.text = element_text(size = 10), legend.position = c(0.05, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11)) + annotate("text",
x = c('PGA', '10-HCO-H2', '10-HCO-PGA', 'H4', '5-CH3-H4', '5-HCO-H4', '5,10-CH+-H4'), y = c(2, 14 , 18, 13, 32, 14, 12),
label = c("**", "", "**", "**", "*", "**", "**"))
#get datasets for each bread type
pea_1 <- legumes %>% filter(main_ingredient == "Pea")
data_empty <-data.frame()
for (i in vitamins) {
data_empty<- filter(pea_1, component == i )
print(i)
print(t.test(data_empty$folate ~ data_empty$sample))
}
pea_1 %>% filter (component != "Total") %>% ggbarplot(x = "component", y = "folate",fill = "sample", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_sd", title = "Pea",
position = position_dodge(0.8), xlab = "", ylab = "Folate (µg/100g DM)", x.text.angle = 30) + theme(plot.title = element_text(hjust = 0.5)
, axis.text = element_text(size = 10), legend.position = c(0.05, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11))
pea_1 %>% filter (component != "Total") %>% ggbarplot(x = "component", y = "folate",fill = "sample", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_sd", title = "Pea",
position = position_dodge(0.8), xlab = "", ylab = "Folate (µg/100g DM)", x.text.angle = 30) + theme(plot.title = element_text(hjust = 0.5)
, axis.text = element_text(size = 10), legend.position = c(0.05, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11)) + annotate("text",
x = c('PGA', '10-HCO-H2', '10-HCO-PGA', 'H4', '5-CH3-H4', '5-HCO-H4', '5,10-CH+-H4'), y = c(8, 4, 4, 8, 3, 12, 4),
label = c("*", "**", "", "**", "**", "*", "**"))
pea_1 %>% filter (component != "Total") %>% ggbarplot(x = "component", y = "folate",fill = "sample", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_sd", title = "Pea",
position = position_dodge(0.8), xlab = "", ylab = "Folate (µg/100g DM)", x.text.angle = 30) + theme(plot.title = element_text(hjust = 0.5)
, axis.text = element_text(size = 10), legend.position = c(0, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11)) + annotate("text",
x = c('PGA', '10-HCO-H2', '10-HCO-PGA', 'H4', '5-CH3-H4', '5-HCO-H4', '5,10-CH+-H4'), y = c(8, 4, 4, 8, 3, 12, 4),
label = c("*", "**", "", "**", "**", "*", "**"))
Pea_bar_1 <- pea_1 %>% filter (component != "Total") %>% ggbarplot(x = "component", y = "folate",fill = "sample", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_sd", title = "Pea",
position = position_dodge(0.8), xlab = "", ylab = "Folate (µg/100g DM)", x.text.angle = 30) + theme(plot.title = element_text(hjust = 0.5)
, axis.text = element_text(size = 10), legend.position = c(0, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11)) + annotate("text",
x = c('PGA', '10-HCO-H2', '10-HCO-PGA', 'H4', '5-CH3-H4', '5-HCO-H4', '5,10-CH+-H4'), y = c(8, 4, 4, 8, 3, 12, 4),
label = c("*", "**", "", "**", "**", "*", "**"))
#get datasets for each bread type
lupin_1 <- legumes %>% filter(main_ingredient == "Lupin")
data_empty <-data.frame()
for (i in vitamins) {
data_empty<- filter(lupin_1, component == i )
print(i)
print(t.test(data_empty$folate ~ data_empty$sample))
}
lupin_1 %>% filter (component != "Total") %>% ggbarplot(x = "component", y = "folate",fill = "sample", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_sd", title = "Lupin",
position = position_dodge(0.8), xlab = "", ylab = "Folate (µg/100g DM)", x.text.angle = 30) + theme(plot.title = element_text(hjust = 0.5)
, axis.text = element_text(size = 10), legend.position = c(0, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11))
lupin_1 %>% filter (component != "Total") %>% ggbarplot(x = "component", y = "folate",fill = "sample", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_sd", title = "Lupin",
position = position_dodge(0.8), xlab = "", ylab = "Folate (µg/100g DM)", x.text.angle = 30) + theme(plot.title = element_text(hjust = 0.5)
, axis.text = element_text(size = 10), legend.position = c(0, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11)) + annotate("text",
x = c('PGA', '10-HCO-H2', '10-HCO-PGA', 'H4', '5-CH3-H4', '5-HCO-H4', '5,10-CH+-H4'), y = c(3, 4, 3, 3, 3, 3, 5),
label = c("*", "", "*", "", "", "", "**"))
lupin_bar_1 <- lupin_1 %>% filter (component != "Total") %>% ggbarplot(x = "component", y = "folate",fill = "sample", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_sd", title = "Lupin",
position = position_dodge(0.8), xlab = "", ylab = "Folate (µg/100g DM)", x.text.angle = 30) + theme(plot.title = element_text(hjust = 0.5)
, axis.text = element_text(size = 10), legend.position = c(0, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11)) + annotate("text",
x = c('PGA', '10-HCO-H2', '10-HCO-PGA', 'H4', '5-CH3-H4', '5-HCO-H4', '5,10-CH+-H4'), y = c(3, 4, 3, 3, 3, 3, 5),
label = c("*", "", "*", "", "", "", "**"))
lupin_1 %>% filter (component != "Total") %>% ggbarplot(x = "component", y = "folate",fill = "sample", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_sd", title = "Lupin",
position = position_dodge(0.8), xlab = "", ylab = "Folate (µg/100g DM)", x.text.angle = 30) + theme(plot.title = element_text(hjust = 0.5)
, axis.text = element_text(size = 10), legend.position = c(0.05, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11)) + annotate("text",
x = c('PGA', '10-HCO-H2', '10-HCO-PGA', 'H4', '5-CH3-H4', '5-HCO-H4', '5,10-CH+-H4'), y = c(3, 4, 3, 3, 3, 3, 5),
label = c("*", "", "*", "", "", "", "**"))
lupin_1 %>% filter (component != "Total") %>% ggbarplot(x = "component", y = "folate",fill = "sample", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_sd", title = "Lupin",
position = position_dodge(0.8), xlab = "", ylab = "Folate (µg/100g DM)", x.text.angle = 30) + theme(plot.title = element_text(hjust = 0.5)
, axis.text = element_text(size = 10), legend.position = c(0.02, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11)) + annotate("text",
x = c('PGA', '10-HCO-H2', '10-HCO-PGA', 'H4', '5-CH3-H4', '5-HCO-H4', '5,10-CH+-H4'), y = c(3, 4, 3, 3, 3, 3, 5),
label = c("*", "", "*", "", "", "", "**"))
lupin_bar_1 <- lupin_1 %>% filter (component != "Total") %>% ggbarplot(x = "component", y = "folate",fill = "sample", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_sd", title = "Lupin",
position = position_dodge(0.8), xlab = "", ylab = "Folate (µg/100g DM)", x.text.angle = 30) + theme(plot.title = element_text(hjust = 0.5)
, axis.text = element_text(size = 10), legend.position = c(0.02, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11)) + annotate("text",
x = c('PGA', '10-HCO-H2', '10-HCO-PGA', 'H4', '5-CH3-H4', '5-HCO-H4', '5,10-CH+-H4'), y = c(3, 4, 3, 3, 3, 3, 5),
label = c("*", "", "*", "", "", "", "**"))
legumes_total <- legumes %>% filter(component == "Total")
View(legumes_total)
#get the means and sd of total
ltm <- aggregate(legumes_total$folate, list(legumes_total$main_ingredient, legumes_total$sample), mean)
ltsd <- aggregate(legumes_total$folate, list(legumes_total$main_ingredient, legumes_total$sample), sd)
View(ltm)
View(ltsd)
faba_1 %>% filter (component != "Total") %>% ggbarplot(x = "component", y = "folate",fill = "sample", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_sd", title = "Faba Bean",
position = position_dodge(0.8), xlab = "", ylab = "Folate (µg/100g DM)", x.text.angle = 30) + theme(plot.title = element_text(hjust = 0.5)
, axis.text = element_text(size = 10), legend.position = c(0.02, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11)) + annotate("text",
x = c('PGA', '10-HCO-H2', '10-HCO-PGA', 'H4', '5-CH3-H4', '5-HCO-H4', '5,10-CH+-H4'), y = c(4, 4, 28, 3, 3, 25, 5),
label = c("**", "", "*", "", "", "**", ""))
faba %>% filter (component != "Total") %>% ggbarplot(x = "component", y = "folate",fill = "sample", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_sd", title = "Faba Bean",
position = position_dodge(0.8), xlab = "", ylab = "Folate (µg/100g DM)", x.text.angle = 30) + theme(plot.title = element_text(hjust = 0.5)
, axis.text = element_text(size = 10), legend.position = c(0.02, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11)) + annotate("text",
x = c('PGA', '10-HCO-H2', '10-HCO-PGA', 'H4', '5-CH3-H4', '5-HCO-H4', '5,10-CH+-H4'), y = c(4, 4, 28, 3, 3, 25, 5),
label = c("**", "", "*", "", "", "**", ""))
faba %>% filter (component != "Total") %>% ggbarplot(x = "component", y = "folate",fill = "sample", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_sd", title = "Faba Bean",
position = position_dodge(0.8), xlab = "", ylab = "Folate (µg/100g DM)", x.text.angle = 30) + theme(plot.title = element_text(hjust = 0.5)
, axis.text = element_text(size = 10), legend.position = c(0.02, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11)) + annotate("text",
x = c('PGA', '10-HCO-H2', '10-HCO-PGA', 'H4', '5-CH3-H4', '5-HCO-H4', '5,10-CH+-H4'), y = c(5, 4, 28, 3, 3, 25, 5),
label = c("**", "", "*", "", "", "**", ""))
faba_bar_1 <- faba %>% filter (component != "Total") %>% ggbarplot(x = "component", y = "folate",fill = "sample", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_sd", title = "Faba Bean",
position = position_dodge(0.8), xlab = "", ylab = "Folate (µg/100g DM)", x.text.angle = 30) + theme(plot.title = element_text(hjust = 0.5)
, axis.text = element_text(size = 10), legend.position = c(0.02, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11)) + annotate("text",
x = c('PGA', '10-HCO-H2', '10-HCO-PGA', 'H4', '5-CH3-H4', '5-HCO-H4', '5,10-CH+-H4'), y = c(5, 4, 28, 3, 3, 25, 5),
label = c("**", "", "*", "", "", "**", ""))
library(readxl)
extraction <- read_excel("E:/PhD/2020/legumes.xlsx",
sheet = "2g vs 0.5g", col_types = c("text",
"text", "text", "text", "text", "text",
"numeric", "skip"))
View(extraction)
extraction <- extraction %>% mutate(folate = if_else(folate < 0, 0, folate))
#get datasets for each bread type
lupin_e <- extraction %>% filter(main_ingredient == "Lupin")
data_empty <-data.frame()
for (i in vitamins) {
data_empty<- filter(lupin_e, component == i )
print(i)
print(t.test(data_empty$folate ~ data_empty$treatment))
}
lupin_e %>% ggbarplot(x = "component", y = "folate",fill = "sample", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_sd", title = "Lupin",
position = position_dodge(0.8), xlab = "", ylab = "Folate (µg/100g DM)", x.text.angle = 30) + theme(plot.title = element_text(hjust = 0.5)
, axis.text = element_text(size = 10), legend.position = c(0.02, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11))
lupin_e %>% ggbarplot(x = "component", y = "folate",fill = "treatment", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_sd", title = "Lupin",
position = position_dodge(0.8), xlab = "", ylab = "Folate (µg/100g DM)", x.text.angle = 30) + theme(plot.title = element_text(hjust = 0.5)
, axis.text = element_text(size = 10), legend.position = c(0.02, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11))
lupin_e %>% ggbarplot(x = "component", y = "folate",fill = "treatment", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_sd", title = "Lupin",
position = position_dodge(0.8), xlab = "", ylab = "Folate (µg/100g DM)", x.text.angle = 30) + theme(plot.title = element_text(hjust = 0.5)
, axis.text = element_text(size = 10), legend.position = c(0.02, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11)) + annotate("text",
x = c('PGA', '10-HCO-H2', '10-HCO-PGA', 'H4', '5-CH3-H4', '5-HCO-H4', '5,10-CH+-H4', "Total"), y = c(5, 4, 28, 3, 3, 25, 5),
label = c("", "", "", "", "", "", "**", "*"))
lupin_e %>% ggbarplot(x = "component", y = "folate",fill = "treatment", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_sd", title = "Lupin",
position = position_dodge(0.8), xlab = "", ylab = "Folate (µg/100g DM)", x.text.angle = 30) + theme(plot.title = element_text(hjust = 0.5)
, axis.text = element_text(size = 10), legend.position = c(0.02, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11)) + annotate("text",
x = c('PGA', '10-HCO-H2', '10-HCO-PGA', 'H4', '5-CH3-H4', '5-HCO-H4', '5,10-CH+-H4', "Total"), y = c(5, 4, 2, 3, 3, 5, 5, 13),
label = c("", "", "", "", "", "", "**", "*"))
lupin_e_bar <- lupin_e %>% ggbarplot(x = "component", y = "folate",fill = "treatment", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_sd", title = "Lupin",
position = position_dodge(0.8), xlab = "", ylab = "Folate (µg/100g DM)", x.text.angle = 30) + theme(plot.title = element_text(hjust = 0.5)
, axis.text = element_text(size = 10), legend.position = c(0.02, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11)) + annotate("text",
x = c('PGA', '10-HCO-H2', '10-HCO-PGA', 'H4', '5-CH3-H4', '5-HCO-H4', '5,10-CH+-H4', "Total"), y = c(5, 4, 2, 3, 3, 5, 5, 13),
label = c("", "", "", "", "", "", "**", "*"))
#get datasets for each bread type
letil_e <- extraction %>% filter(main_ingredient == "Lentil")
data_empty <-data.frame()
for (i in vitamins) {
data_empty<- filter(lentil_e, component == i )
print(i)
print(t.test(data_empty$folate ~ data_empty$treatment))
}
data_empty <-data.frame()
for (i in vitamins) {
data_empty<- filter(letil_e, component == i )
print(i)
print(t.test(data_empty$folate ~ data_empty$treatment))
}
letil_e %>% ggbarplot(x = "component", y = "folate",fill = "treatment", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_sd", title = "Lentil",
position = position_dodge(0.8), xlab = "", ylab = "Folate (µg/100g DM)", x.text.angle = 30) + theme(plot.title = element_text(hjust = 0.5)
, axis.text = element_text(size = 10), legend.position = c(0.02, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11))
letil_e %>% ggbarplot(x = "component", y = "folate",fill = "treatment", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_sd", title = "Lentil",
position = position_dodge(0.8), xlab = "", ylab = "Folate (µg/100g DM)", x.text.angle = 30) + theme(plot.title = element_text(hjust = 0.5)
, axis.text = element_text(size = 10), legend.position = c(0.02, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11)) + annotate("text",
x = c('PGA', '10-HCO-H2', '10-HCO-PGA', 'H4', '5-CH3-H4', '5-HCO-H4', '5,10-CH+-H4', "Total"), y = c(8, 4, 8, 15, 40, 18, 18, 80),
label = c("*", "", "*", "*", "*", "**", "**", "**"))
lentil_e_bar <- letil_e %>% ggbarplot(x = "component", y = "folate",fill = "treatment", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_sd", title = "Lentil",
position = position_dodge(0.8), xlab = "", ylab = "Folate (µg/100g DM)", x.text.angle = 30) + theme(plot.title = element_text(hjust = 0.5)
, axis.text = element_text(size = 10), legend.position = c(0.02, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11)) + annotate("text",
x = c('PGA', '10-HCO-H2', '10-HCO-PGA', 'H4', '5-CH3-H4', '5-HCO-H4', '5,10-CH+-H4', "Total"), y = c(8, 4, 8, 15, 40, 18, 18, 80),
label = c("*", "", "*", "*", "*", "**", "**", "**"))
#get datasets for each bread type
pea_e <- extraction %>% filter(main_ingredient == "Pea")
data_empty <-data.frame()
for (i in vitamins) {
data_empty<- filter(pea_e, component == i )
print(i)
print(t.test(data_empty$folate ~ data_empty$treatment))
}
pea_e %>% ggbarplot(x = "component", y = "folate",fill = "treatment", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_sd", title = "Pea",
position = position_dodge(0.8), xlab = "", ylab = "Folate (µg/100g DM)", x.text.angle = 30) + theme(plot.title = element_text(hjust = 0.5)
, axis.text = element_text(size = 10), legend.position = c(0.02, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11))
pea_e %>% ggbarplot(x = "component", y = "folate",fill = "treatment", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_sd", title = "Pea",
position = position_dodge(0.8), xlab = "", ylab = "Folate (µg/100g DM)", x.text.angle = 30) + theme(plot.title = element_text(hjust = 0.5)
, axis.text = element_text(size = 10), legend.position = c(0.02, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11)) + annotate("text",
x = c('PGA', '10-HCO-H2', '10-HCO-PGA', 'H4', '5-CH3-H4', '5-HCO-H4', '5,10-CH+-H4', "Total"), y = c(8, 4, 8, 9, 4, 18, 4, 25),
label = c("*", "**", "", "**", "*", "", "**", "**"))
pea_e_bar <- pea_e %>% ggbarplot(x = "component", y = "folate",fill = "treatment", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_sd", title = "Pea",
position = position_dodge(0.8), xlab = "", ylab = "Folate (µg/100g DM)", x.text.angle = 30) + theme(plot.title = element_text(hjust = 0.5)
, axis.text = element_text(size = 10), legend.position = c(0.02, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11)) + annotate("text",
x = c('PGA', '10-HCO-H2', '10-HCO-PGA', 'H4', '5-CH3-H4', '5-HCO-H4', '5,10-CH+-H4', "Total"), y = c(8, 4, 8, 9, 4, 18, 4, 25),
label = c("*", "**", "", "**", "*", "", "**", "**"))
#get datasets for each bread type
faba_e <- extraction %>% filter(main_ingredient == "Faba Bean")
data_empty <-data.frame()
for (i in vitamins) {
data_empty<- filter(faba_e, component == i )
print(i)
print(t.test(data_empty$folate ~ data_empty$treatment))
}
faba_e %>% ggbarplot(x = "component", y = "folate",fill = "treatment", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_sd", title = "Faba Bean",
position = position_dodge(0.8), xlab = "", ylab = "Folate (µg/100g DM)", x.text.angle = 30) + theme(plot.title = element_text(hjust = 0.5)
, axis.text = element_text(size = 10), legend.position = c(0.02, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11))
faba_e %>% ggbarplot(x = "component", y = "folate",fill = "treatment", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_sd", title = "Faba Bean",
position = position_dodge(0.8), xlab = "", ylab = "Folate (µg/100g DM)", x.text.angle = 30) + theme(plot.title = element_text(hjust = 0.5)
, axis.text = element_text(size = 10), legend.position = c(0.02, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11)) + annotate("text",
x = c('PGA', '10-HCO-H2', '10-HCO-PGA', 'H4', '5-CH3-H4', '5-HCO-H4', '5,10-CH+-H4', "Total"), y = c(10, 4, 8, 9, 4, 30, 4, 110),
label = c("**", "", "", "", "", "**", "", "*"))
faba_e_bar <- faba_e %>% ggbarplot(x = "component", y = "folate",fill = "treatment", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_sd", title = "Faba Bean",
position = position_dodge(0.8), xlab = "", ylab = "Folate (µg/100g DM)", x.text.angle = 30) + theme(plot.title = element_text(hjust = 0.5)
, axis.text = element_text(size = 10), legend.position = c(0.02, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11)) + annotate("text",
x = c('PGA', '10-HCO-H2', '10-HCO-PGA', 'H4', '5-CH3-H4', '5-HCO-H4', '5,10-CH+-H4', "Total"), y = c(10, 4, 8, 9, 4, 30, 4, 110),
label = c("**", "", "", "", "", "**", "", "*"))
#Get the means of all the group
legumes_mean <- aggregate(legumes$folate, list(legumes$main_ingredient, legumes$sample,legumes$component), mean)
View(legumes_mean)
bread_1_total
View(legumes_mean)
legumes_std <- aggregate(legumes$folate, list(legumes$main_ingredient, legumes$sample,legumes$component),sd)
View(legumes_std)
#Get the means of all the group
bread1_mean <- aggregate(bread_1$folate, list(bread_1$treatment, bread_1$sample,bread_1$component), mean)
View(bread1_mean)
bread1_std <- aggregate(bread_1$folate, list(bread_1$treatment, bread_1$sample,bread_1$component),sd)
View(bread1_std)
bread_2
bread2_mean <- aggregate(bread_2$folate, list(bread_2$brand, bread_2$sample,bread_2$component), mean)
bread2_std <- aggregate(bread_2$folate, list(bread_2$brand, bread_2$sample,bread_2$component),sd)
View(bread2_mean)
View(bread1_std)
View(bread2_std)
oat_bread
oatbread_mean <- aggregate(oat_bread$folate, list(oat_bread$main_ingredient, oat_bread$sample,oat_bread$component), mean)
oatbread_std <- aggregate(oat_bread$folate, list(oat_bread$main_ingredient, oat_bread$sample,oat_bread$component),sd)
View(oatbread_mean)
View(oatbread_std)
std
STD
mix_mean <- aggregate(STD$folate, list(STD$treatment, STD$component), mean)
mix_std <- aggregate(STD$folate, list(STD$treatment, STD$component),sd)
View(mix_mean)
View(oatbread_std)
View(mix_std)
library(readxl)
STD <- read_excel("E:/PhD/2020/STD Digestion _imported.xlsx",
col_types = c("text", "text", "numeric",
"numeric", "text", "numeric", "numeric",
"numeric", "numeric", "skip", "skip"))
View(STD)
STD %>% ggbarplot(x = "component", y = "folate",fill = "treatment", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_sd", title = "Rye (Toast)",
position = position_dodge(0.8), xlab = "", ylab = "Folate (ng)", x.text.angle = 30) + theme(plot.title = element_text(hjust = 0.5)
, axis.text = element_text(size = 10), legend.position = c(0.01, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11))
library(dplyr)
library(ggpubr)
STD %>% ggbarplot(x = "component", y = "folate",fill = "treatment", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_sd", title = "Rye (Toast)",
position = position_dodge(0.8), xlab = "", ylab = "Folate (ng)", x.text.angle = 30) + theme(plot.title = element_text(hjust = 0.5)
, axis.text = element_text(size = 10), legend.position = c(0.01, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11))
STD$component <- factor(STD$component, levels = component_order)
STD$treatment <- factor(STD$treatment, levels = legend_order)
STD %>% ggbarplot(x = "component", y = "folate",fill = "treatment", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_sd", title = "Rye (Toast)",
position = position_dodge(0.8), xlab = "", ylab = "Folate (ng)", x.text.angle = 30) + theme(plot.title = element_text(hjust = 0.5)
, axis.text = element_text(size = 10), legend.position = c(0.01, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11))
STD %>% ggbarplot(x = "component", y = "folate",fill = "treatment", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_sd", title = "",
position = position_dodge(0.8), xlab = "", ylab = "Folate (ng)", x.text.angle = 30) + theme(plot.title = element_text(hjust = 0.5)
, axis.text = element_text(size = 10), legend.position = c(1, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11))
STD %>% ggbarplot(x = "component", y = "folate",fill = "treatment", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_sd", title = "",
position = position_dodge(0.8), xlab = "", ylab = "Folate (ng)", x.text.angle = 30) + theme(plot.title = element_text(hjust = 0.5)
, axis.text = element_text(size = 10), legend.position = c(0.8, 1), legend.ti
STD %>% ggbarplot(x = "component", y = "folate",fill = "treatment", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_sd", title = "",
position = position_dodge(0.8), xlab = "", ylab = "Folate (ng)", x.text.angle = 30) + theme(plot.title = element_text(hjust = 0.5)
, axis.text = element_text(size = 10), legend.position = c(0.8, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11))
STD %>% ggbarplot(x = "component", y = "folate",fill = "treatment", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_sd", title = "",
position = position_dodge(0.8), xlab = "", ylab = "Folate (ng)", x.text.angle = 30) + theme(plot.title = element_text(hjust = 0.5)
, axis.text = element_text(size = 10), legend.position = c(0.9, 0.5), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11))
STD %>% ggbarplot(x = "component", y = "folate",fill = "treatment", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_sd", title = "",
position = position_dodge(0.8), xlab = "", ylab = "Folate (ng)", x.text.angle = 30) + theme(plot.title = element_text(hjust = 0.5)
, axis.text = element_text(size = 10), legend.position = c(0.9, 0.8), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11))
STD %>% ggbarplot(x = "component", y = "folate",fill = "treatment", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_sd", title = "",
position = position_dodge(0.8), xlab = "", ylab = "Folate (ng)", x.text.angle = 30) + theme(plot.title = element_text(hjust = 0.5)
, axis.text = element_text(size = 10), legend.position = c(0.8, 0.8), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11))
library(readxl)
Extraction <- read_excel("E:/R/PhD/legume/23102020.xlsx",
sheet = "importable2")
View(Extraction)
#concert the negative number to zero
Extraction_bread <- Extraction %>% mutate(folate = if_else(folate < 0, 0, folate))
library(dplyr)
library(ggpubr)
library(psych)
#concert the negative number to zero
Extraction_bread <- Extraction %>% mutate(folate = if_else(folate < 0, 0, folate))
#Get the means of all the group
Extraction_bread_mean <- aggregate(Extraction_bread$folate, list(Extraction_bread$code, Extraction_bread$component), mean)
View(Extraction_bread_mean)
#Get the means of all the group
Extraction_bread_sd <- aggregate(Extraction_bread$folate, list(Extraction_bread$code, Extraction_bread$component), sd)
View(Extraction_bread_sd)
View(Extraction_bread_sd)
View(Extraction_bread_mean)
#Get the means of all the group
Extraction_bread_sd <- aggregate(Extraction_bread$folate, list(Extraction_bread$weight, Extraction_bread$component, Extraction_bread$treatment), sd)
View(Extraction_bread_sd)
o
View(Extraction_bread_mean)
#Get the means of all the group
Extraction_bread_mean <- aggregate(Extraction_bread$folate, list(Extraction_bread$weight, Extraction_bread$component, Extraction_bread$treatment), mean)
View(Extraction_bread_mean)
library(readxl)
Extraction <- read_excel("E:/R/PhD/legume/23102020.xlsx",
sheet = "importable2", col_types = c("text",
"text", "text", "text", "skip", "skip",
"numeric", "skip"))
View(Extraction)
#concert the negative number to zero
Extraction_bread <- Extraction %>% mutate(folate = if_else(folate < 0, 0, folate))
Extraction_bread %>% ggbarplot(x = "component", y = "folate",fill = "code", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_sd", title = "",
position = position_dodge(0.8), xlab = "", ylab = "Folate Content (µg/100g FW)", x.text.angle = 30) + theme(plot.title = element_text(hjust = 0.5)
, axis.text = element_text(size = 10), legend.position = c(0.8, 0.8), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11))
Extraction_bread %>% ggbarplot(x = "component", y = "folate",fill = "code", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_sd", title = "",
position = position_dodge(0.8), xlab = "", ylab = "Folate Content (µg/100g FW)", x.text.angle = 30) + theme(plot.title = element_text(hjust = 0.5)
, axis.text = element_text(size = 10), legend.position = c(0, 0.9), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11))
pic3_wo <- mean_vita %>% filter(Group.1 == 'Whole Oat' & Group.2 == 'Bread Digesta') %>% ggpie("x",  fill = "Group.3", color = "white",
palette = "npg") + ggtitle("Digesta") + theme(plot.title = element_text(hjust = 0.5)) +
theme(legend.position = "right")  + theme_void() + theme(legend.title = element_blank())
mean_vita
library(readxl)
Extrudate <- read_excel("C:/Users/fengyuan/Desktop/Extrudate.xlsx")
View(Extrudate)
Extrudate <- Extrudate %>% mutate(dry = if_else(dry < 0, 0, dry))
library(dplyr)
library(ggpubr)
Extrudate <- Extrudate %>% mutate(dry = if_else(dry < 0, 0, dry))
# S2
s2 <- Extrudate %>% filter(main_ingredient == "S2")
S2 %>% ggbarplot(x = "component", y = "dry",fill = "treatment", color = "white", palette = "jco",
add.params = list(color = "black"), add = "mean_sd", title = "",
position = position_dodge(0.8), xlab = "", ylab = "Folate (µg/100g DM)", x.text.angle = 30) +
theme(plot.title = element_text(hjust = 0.5),axis.text = element_text(size = 10),
legend.position = c(0.83,0.9), legend.title = element_blank(),legend.text = element_text(size = 10),
axis.title.y = element_text(size = 11))
s2 <- Extrudate %>% filter(main_ingredient == "S2")
S2 %>% ggbarplot(x = "component", y = "dry",fill = "treatment", color = "white", palette = "jco",
add.params = list(color = "black"), add = "mean_sd", title = "",
position = position_dodge(0.8), xlab = "", ylab = "Folate (µg/100g DM)", x.text.angle = 30) +
theme(plot.title = element_text(hjust = 0.5),axis.text = element_text(size = 10),
legend.position = c(0.83,0.9), legend.title = element_blank(),legend.text = element_text(size = 10),
axis.title.y = element_text(size = 11))
s2 %>% ggbarplot(x = "component", y = "dry",fill = "treatment", color = "white", palette = "jco",
add.params = list(color = "black"), add = "mean_sd", title = "",
position = position_dodge(0.8), xlab = "", ylab = "Folate (µg/100g DM)", x.text.angle = 30) +
theme(plot.title = element_text(hjust = 0.5),axis.text = element_text(size = 10),
legend.position = c(0.83,0.9), legend.title = element_blank(),legend.text = element_text(size = 10),
axis.title.y = element_text(size = 11))
s2 %>% ggbarplot(x = "component", y = "dry",fill = "sample", color = "white", palette = "jco",
add.params = list(color = "black"), add = "mean_sd", title = "",
position = position_dodge(0.8), xlab = "", ylab = "Folate (µg/100g DM)", x.text.angle = 30) +
theme(plot.title = element_text(hjust = 0.5),axis.text = element_text(size = 10),
legend.position = c(0.83,0.9), legend.title = element_blank(),legend.text = element_text(size = 10),
axis.title.y = element_text(size = 11))
library(readxl)
Extrudate <- read_excel("C:/Users/fengyuan/Desktop/Extrudate.xlsx")
View(Extrudate)
Extrudate <- Extrudate %>% mutate(dry = if_else(dry < 0, 0, dry))
ord1 <- c("Flour", "Extrudate", "Extrudate Digesta")
# S2
s2 <- Extrudate %>% filter(main_ingredient == "S2")
s2$component <- factor(s2$component, levels = x_ord)
s2$sample <- factor(s2$sample, levels = ord1)
s2 %>% ggbarplot(x = "component", y = "dry",fill = "sample", color = "white", palette = "jco",
add.params = list(color = "black"), add = "mean_sd", title = "",
position = position_dodge(0.8), xlab = "", ylab = "Folate (µg/100g DM)", x.text.angle = 30) +
theme(plot.title = element_text(hjust = 0.5),axis.text = element_text(size = 10),
legend.position = c(0.83,0.9), legend.title = element_blank(),legend.text = element_text(size = 10),
axis.title.y = element_text(size = 11))
#change the oreder of x-axid
x_ord <- c ("Total", "PGA", "10-HCO-H2", "10-HCO-PGA", "H4", "5-CH3-H4", "5-HCO-H4", "5,10-CH+-H4")
Extrudate <- Extrudate %>% mutate(dry = if_else(dry < 0, 0, dry))
ord1 <- c("Flour", "Extrudate", "Extrudate Digesta")
# S2
s2 <- Extrudate %>% filter(main_ingredient == "S2")
s2$component <- factor(s2$component, levels = x_ord)
s2$sample <- factor(s2$sample, levels = ord1)
s2 %>% ggbarplot(x = "component", y = "dry",fill = "sample", color = "white", palette = "jco",
add.params = list(color = "black"), add = "mean_sd", title = "",
position = position_dodge(0.8), xlab = "", ylab = "Folate (µg/100g DM)", x.text.angle = 30) +
theme(plot.title = element_text(hjust = 0.5),axis.text = element_text(size = 10),
legend.position = c(0.83,0.9), legend.title = element_blank(),legend.text = element_text(size = 10),
axis.title.y = element_text(size = 11))
s2 %>% ggbarplot(x = "component", y = "dry",fill = "sample", color = "white", palette = "jco",
add.params = list(color = "black"), add = "mean_sd", title = "S2",
position = position_dodge(0.8), xlab = "", ylab = "Folate (µg/100g DM)", x.text.angle = 30) +
theme(plot.title = element_text(hjust = 0.5),axis.text = element_text(size = 10),
legend.position = c(0.83,0.9), legend.title = element_blank(),legend.text = element_text(size = 10),
axis.title.y = element_text(size = 11))
s4 <- Extrudate %>% filter(main_ingredient == "S4")
s4$component <- factor(s2$component, levels = x_ord)
s4$sample <- factor(s2$sample, levels = ord1)
s4 %>% ggbarplot(x = "component", y = "dry",fill = "sample", color = "white", palette = "jco",
add.params = list(color = "black"), add = "mean_sd", title = "S4",
position = position_dodge(0.8), xlab = "", ylab = "Folate (µg/100g DM)", x.text.angle = 30) +
theme(plot.title = element_text(hjust = 0.5),axis.text = element_text(size = 10),
legend.position = c(0.83,0.9), legend.title = element_blank(),legend.text = element_text(size = 10),
axis.title.y = element_text(size = 11))
l <- Extrudate %>% filter(main_ingredient == "L")
ord2 <- c("Flour", "Extrudate 40", "Extrudate 40 Digesta", "Extrudate 80", "Extrudate 80 Digesta")
l$component <- factor(l$component, levels = x_ord)
l$sample <- factor(l$sample, levels = ord2)
l %>% ggbarplot(x = "component", y = "dry",fill = "sample", color = "white", palette = "jco",
add.params = list(color = "black"), add = "mean_sd", title = "L",
position = position_dodge(0.8), xlab = "", ylab = "Folate (µg/100g DM)", x.text.angle = 30) +
theme(plot.title = element_text(hjust = 0.5),axis.text = element_text(size = 10),
legend.position = c(0.83,0.9), legend.title = element_blank(),legend.text = element_text(size = 10),
axis.title.y = element_text(size = 11))
S2
Extrudate
View(s2)
s2
s4
library(dbplyr)
library(dplyr)
library(ggpubr)
s2 %>% ggbarplot(x = "component", y = "dry",fill = "sample", color = "white", palette = "jco",
add.params = list(color = "black"), add = "mean_sd", title = "S2",
position = position_dodge(0.8), xlab = "", ylab = "Folate (µg/100g DM)", x.text.angle = 30) +
theme(plot.title = element_text(hjust = 0.5),axis.text = element_text(size = 10),
legend.position = c(0.83,0.9), legend.title = element_blank(),legend.text = element_text(size = 10),
axis.title.y = element_text(size = 11))
s4 %>% ggbarplot(x = "component", y = "dry",fill = "sample", color = "white", palette = "jco",
add.params = list(color = "black"), add = "mean_sd", title = "S4",
position = position_dodge(0.8), xlab = "", ylab = "Folate (µg/100g DM)", x.text.angle = 30) +
theme(plot.title = element_text(hjust = 0.5),axis.text = element_text(size = 10),
legend.position = c(0.83,0.9), legend.title = element_blank(),legend.text = element_text(size = 10),
axis.title.y = element_text(size = 11))
l %>% ggbarplot(x = "component", y = "dry",fill = "sample", color = "white", palette = "jco",
add.params = list(color = "black"), add = "mean_sd", title = "L",
position = position_dodge(0.8), xlab = "", ylab = "Folate (µg/100g DM)", x.text.angle = 30) +
theme(plot.title = element_text(hjust = 0.5),axis.text = element_text(size = 10),
legend.position = c(0.83,0.9), legend.title = element_blank(),legend.text = element_text(size = 10),
axis.title.y = element_text(size = 11))
