install.packages("rmarkdown")
tinytex::install_tinytex()
devtools::install_github('rstudio/rmarkdown')
setwd("C:/Users/fengyuan/breads")
setwd("C:/Users/fengyuan/breads")
devtools::install_github('rstudio/rmarkdown')
brew remove pandoc
sessionInfo()
rmarkdown::pandoc_version()
rmarkdown::pandoc_exec()
devtools::install_github('rstudio/rmarkdown')
install.packages("devtools")
devtools::install_github('rstudio/rmarkdown')
library(rmarkdown)
sessionInfo()
devtools::session_info('rmarkdown')
tinytex::install_tinytex()
library(readxl)
breads_g <- read_excel("//ad.helsinki.fi/home/f/fengyuan/Desktop/tests on breads.xlsx",
sheet = "ginding", col_types = c("text",
"skip", "text", "text", "text", "text",
"skip", "skip", "numeric", "numeric",
"numeric", "numeric"))
View(breads_g)
library(ggpubr)
library(dplyr)
breads_g_wheat <- breads_g %>% filter(main_ingredient == "Whole Wheat")
ggbarplot(breads_g_wheat. x = "component", y = "folate(µg/100 g FM)",
fill = "treatment", color = "white", palette = "jco", add.params = list(color = "black"),
add = "jitter", title = "White Wheat", position = position_dodge(0.8), xlab = "",
ylab = "Folate (µg/100g FM)", x.text.angle = 30) + theme(plot.title = element_text(hjust = 0.5),
axis.text = element_text(size = 10), legend.position = c(0, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11))
ggbarplot(breads_g_wheat, x = "component", y = "folate(µg/100 g FM)",fill = "treatment", color = "white",
palette = "jco", add.params = list(color = "black"), add = "jitter", title = "White Wheat", position = position_dodge(0.8), xlab = "",
ylab = "Folate (µg/100g FM)", x.text.angle = 30) +
theme(plot.title = element_text(hjust = 0.5), axis.text = element_text(size = 10), legend.position = c(0, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11))
breads_g$folate <- bread_g$folate(µg/100 g FM)
library(readxl)
breads_g <- read_excel("//ad.helsinki.fi/home/f/fengyuan/Desktop/tests on breads.xlsx",
sheet = "importable1")
View(breads_g)
breads_g_wheat <- breads_g %>% filter(main_ingredient == "Whole Wheat")
ggbarplot(breads_g_wheat, x = "component", y = "folate",fill = "treatment", color = "white",
palette = "jco", add.params = list(color = "black"), add = "jitter", title = "White Wheat", position = position_dodge(0.8), xlab = "",
ylab = "Folate (µg/100g FM)", x.text.angle = 30) +
theme(plot.title = element_text(hjust = 0.5), axis.text = element_text(size = 10), legend.position = c(0, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11))
ggbarplot(breads_g_wheat, x = "component", y = "folate",fill = "Treatment", color = "white",
palette = "jco", add.params = list(color = "black"), add = "jitter", title = "White Wheat", position = position_dodge(0.8), xlab = "",
ylab = "Folate (µg/100g FM)", x.text.angle = 30) +
theme(plot.title = element_text(hjust = 0.5), axis.text = element_text(size = 10), legend.position = c(0, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11))
ggbarplot(breads_g_wheat, x = "component", y = "folate",fill = "Treatment", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_range", title = "Whole Wheat", position = position_dodge(0.8), xlab = "",
ylab = "Folate (µg/100g FM)", x.text.angle = 30) +
theme(plot.title = element_text(hjust = 0.5), axis.text = element_text(size = 10), legend.position = c(0, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11))
breads_g_rye <- breads_g %>% filter(main_ingredient == "Rye")
ggbarplot(breads_g_rye, x = "component", y = "folate",fill = "Treatment", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_range", title = "Rye", position = position_dodge(0.8), xlab = "",
ylab = "Folate (µg/100g FM)", x.text.angle = 30) +
theme(plot.title = element_text(hjust = 0.5), axis.text = element_text(size = 10), legend.position = c(0, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11))
w1 <- ggbarplot(breads_g_wheat, x = "component", y = "folate",fill = "Treatment", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_range", title = "Whole Wheat", position = position_dodge(0.8), xlab = "",
ylab = "Folate (µg/100g FM)", x.text.angle = 30) +
theme(plot.title = element_text(hjust = 0.5), axis.text = element_text(size = 10), legend.position = c(0, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11))
r2 <- ggbarplot(breads_g_rye, x = "component", y = "folate",fill = "Treatment", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_range", title = "Rye", position = position_dodge(0.8), xlab = "",
ylab = "Folate (µg/100g FM)", x.text.angle = 30) +
theme(plot.title = element_text(hjust = 0.5), axis.text = element_text(size = 10), legend.position = c(0, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11))
install.packages("patchwork")
library(patchwork)
w1 + r1 + plot_layout(ncol=1)
w1 + r2 + plot_layout(ncol=1) #organize the plots
pic1 <- w1 + r2 + plot_layout(ncol=1) #organize the plots
library(readxl)
breads_l <- read_excel("//ad.helsinki.fi/home/f/fengyuan/Desktop/tests on breads.xlsx",
sheet = "importable2")
View(breads_l)
breads_l_oat <- breads_l %>% filter(main_ingredient == "Oat")
o1 <- ggbarplot(breads_g_wheat, x = "component", y = "folate",fill = "Treatment", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_range", title = "Oat Flat", position = position_dodge(0.8), xlab = "",
ylab = "Folate (µg/100g FM)", x.text.angle = 30) +
theme(plot.title = element_text(hjust = 0.5), axis.text = element_text(size = 10), legend.position = c(0, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11))
o1
o1 <- ggbarplot(breads_l_oat, x = "component", y = "folate",fill = "Treatment", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_range", title = "Oat Flat", position = position_dodge(0.8), xlab = "",
ylab = "Folate (µg/100g FM)", x.text.angle = 30) +
theme(plot.title = element_text(hjust = 0.5), axis.text = element_text(size = 10), legend.position = c(0, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11))
o1
View(breads_l_oat)
library(psych)
describeBy(breads_l_oat$folate, group = c(breads_l_oat$Treatment, breads_l_oat$component))
View(breads_g_wheat)
describeBy(breads_l_oat$folate, breads_l_oat$Treatment & breads_l_oat$component))
describeBy(breads_l_oat$folate, breads_l_oat$Treatment)
describeBy(breads_l_oat$folate, group = list(breads_l_oat$Treatment, breads_l_oat$component))
ggbarplot(breads_l_oat, x = "component", y = "folate",fill = "Treatment", color = "white",
palette = "jco", add.params = list(color = "black"), add = c("dotplot","mean_range"), title = "Oat Flat", position = position_dodge(0.8), xlab = "",
ylab = "Folate (µg/100g FM)", x.text.angle = 30) +
theme(plot.title = element_text(hjust = 0.5), axis.text = element_text(size = 10), legend.position = c(0, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11))
ggbarplot(breads_l_oat, x = "component", y = "folate",fill = "Treatment", color = "white",
palette = "jco", add.params = list(color = "black"), add = c("jitter","mean_range"), title = "Oat Flat", position = position_dodge(0.8), xlab = "",
ylab = "Folate (µg/100g FM)", x.text.angle = 30) +
theme(plot.title = element_text(hjust = 0.5), axis.text = element_text(size = 10), legend.position = c(0, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11))
o1 <- ggbarplot(breads_l_oat, x = "component", y = "folate",fill = "Treatment", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_range", title = "Oat Flat", position = position_dodge(0.8), xlab = "",
ylab = "Folate (µg/100g FM)", x.text.angle = 30) +
theme(plot.title = element_text(hjust = 0.5), axis.text = element_text(size = 10), legend.position = c(0, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11))
breads_l_rye <- breads_l %>% filter(main_ingredient == "Rye")
r1 <- ggbarplot(breads_l_rye, x = "component", y = "folate",fill = "Treatment", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_range", title = "Whole Rye", position = position_dodge(0.8), xlab = "",
ylab = "Folate (µg/100g FM)", x.text.angle = 30) +
theme(plot.title = element_text(hjust = 0.5), axis.text = element_text(size = 10), legend.position = c(0, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11));r1
library(readxl)
breads_g <- read_excel("//ad.helsinki.fi/home/f/fengyuan/Desktop/tests on breads.xlsx",
sheet = "importable1")
View(breads_g)
library(readxl)
breads_l <- read_excel("//ad.helsinki.fi/home/f/fengyuan/Desktop/tests on breads.xlsx",
sheet = "importable2")
View(breads_l)
breads_g_wheat <- breads_g %>% filter(main_ingredient == "Whole Wheat")
w1 <- ggbarplot(breads_g_wheat, x = "component", y = "folate",fill = "Treatment", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_range", title = "Whole Wheat", position = position_dodge(0.8), xlab = "",
ylab = "Folate (µg/100g FM)", x.text.angle = 30) +
theme(plot.title = element_text(hjust = 0.5), axis.text = element_text(size = 10), legend.position = c(0, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11))
breads_g_rye <- breads_g %>% filter(main_ingredient == "Rye")
r2 <- ggbarplot(breads_g_rye, x = "component", y = "folate",fill = "Treatment", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_range", title = "Rye", position = position_dodge(0.8), xlab = "",
ylab = "Folate (µg/100g FM)", x.text.angle = 30) +
theme(plot.title = element_text(hjust = 0.5), axis.text = element_text(size = 10), legend.position = c(0, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11))
pic1 <- w1 + r2 + plot_layout(ncol=1) #organize the plots
pic1
breads_l_oat <- breads_l %>% filter(main_ingredient == "Oat")
o1 <- ggbarplot(breads_l_oat, x = "component", y = "folate",fill = "Treatment", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_range", title = "Oat Flat", position = position_dodge(0.8), xlab = "",
ylab = "Folate (µg/100g FM)", x.text.angle = 30) +
theme(plot.title = element_text(hjust = 0.5), axis.text = element_text(size = 10), legend.position = c(0, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11))
#show the mean, max, min, etc
describeBy(breads_l_oat$folate, group = list(breads_l_oat$Treatment, breads_l_oat$component))
breads_l_rye <- breads_l %>% filter(main_ingredient == "Rye")
r1 <- ggbarplot(breads_l_rye, x = "component", y = "folate",fill = "Treatment", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_range", title = "Whole Rye", position = position_dodge(0.8), xlab = "",
ylab = "Folate (µg/100g FM)", x.text.angle = 30) +
theme(plot.title = element_text(hjust = 0.5), axis.text = element_text(size = 10), legend.position = c(0, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11));r1
View(breads_l)
pic2 <- o1 + r1 + plot_layout(ncol=1) #organize the plots
pic2
breads_g_wheat <- breads_g %>% filter(main_ingredient == "Whole Wheat")
w1 <- ggbarplot(breads_g_wheat, x = "component", y = "folate",fill = "Treatment", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_range", title = "Whole Wheat Toast", position = position_dodge(0.8), xlab = "",
ylab = "Folate (µg/100g FM)", x.text.angle = 30) +
theme(plot.title = element_text(hjust = 0.5), axis.text = element_text(size = 10), legend.position = c(0, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11))
breads_g_rye <- breads_g %>% filter(main_ingredient == "Rye")
r2 <- ggbarplot(breads_g_rye, x = "component", y = "folate",fill = "Treatment", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_range", title = "Rye Squre", position = position_dodge(0.8), xlab = "",
ylab = "Folate (µg/100g FM)", x.text.angle = 30) +
theme(plot.title = element_text(hjust = 0.5), axis.text = element_text(size = 10), legend.position = c(0, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11))
pic1 <- w1 + r2 + plot_layout(ncol=1) #organize the plots
pic1
breads_l_oat <- breads_l %>% filter(main_ingredient == "Oat")
o1 <- ggbarplot(breads_l_oat, x = "component", y = "folate",fill = "Treatment", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_range", title = "Oat Squre", position = position_dodge(0.8), xlab = "",
ylab = "Folate (µg/100g FM)", x.text.angle = 30) +
theme(plot.title = element_text(hjust = 0.5), axis.text = element_text(size = 10), legend.position = c(0, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11))
#show the mean, max, min, etc
describeBy(breads_l_oat$folate, group = list(breads_l_oat$Treatment, breads_l_oat$component))
breads_l_rye <- breads_l %>% filter(main_ingredient == "Rye")
r1 <- ggbarplot(breads_l_rye, x = "component", y = "folate",fill = "Treatment", color = "white",
palette = "jco", add.params = list(color = "black"), add = "mean_range", title = "Rye Toast", position = position_dodge(0.8), xlab = "",
ylab = "Folate (µg/100g FM)", x.text.angle = 30) +
theme(plot.title = element_text(hjust = 0.5), axis.text = element_text(size = 10), legend.position = c(0, 1), legend.title = element_blank(),
legend.text = element_text(size = 10),axis.title.y = element_text(size = 11))
pic2 <- o1 + r1 + plot_layout(ncol=1) #organize the plots
setwd("C:/Users/fengyuan/breads")
ggsave("breads_grinding", plot = pic1, dpi = 300, device = "tiff")
ggsave("breads_lipase", plot = pic2, dpi = 300, device = "tiff")
